name: Run Database Migration

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # ✅ Use stable version for psycopg2 compatibility

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # ✅ Ensure compatible psycopg2 & bcrypt setup
          pip install "psycopg2-binary==2.9.9" "bcrypt==4.1.2" "passlib[bcrypt]==1.7.4" "sqlalchemy==2.0.23"

      - name: Create fallback database.py (if missing)
        run: |
          if [ ! -f database.py ]; then
            echo "Creating fallback database.py..."
            cat <<'PYCODE' > database.py
from sqlalchemy import create_engine
from sqlalchemy.orm import declarative_base, sessionmaker
import os

DATABASE_URL = os.getenv("DATABASE_URL")

if not DATABASE_URL:
    raise RuntimeError("DATABASE_URL not set")

engine = create_engine(DATABASE_URL, pool_pre_ping=True)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
Base = declarative_base()
PYCODE
          fi

      - name: Run Database Migration
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo ">>> Running database migration..."
          python - <<'PYCODE'
from database import Base, engine
from models import User, OTP, GameMatch, WalletTransaction, Stake
print("Creating all tables if not exist...")
Base.metadata.create_all(bind=engine)
print("✅ Migration completed successfully!")
PYCODE
